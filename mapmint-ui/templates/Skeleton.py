#!/usr/bin/env python
# -*- coding: UTF-8 -*-




##################################################
## DEPENDENCIES
import sys
import os
import os.path
try:
    import builtins as builtin
except ImportError:
    import __builtin__ as builtin
from os.path import getmtime, exists
import time
import types
from Cheetah.Version import MinCompatibleVersion as RequiredCheetahVersion
from Cheetah.Version import MinCompatibleVersionTuple as RequiredCheetahVersionTuple
from Cheetah.Template import Template
from Cheetah.DummyTransaction import *
from Cheetah.NameMapper import NotFound, valueForName, valueFromSearchList, valueFromFrameOrSearchList
from Cheetah.CacheRegion import CacheRegion
import Cheetah.Filters as Filters
import Cheetah.ErrorCatchers as ErrorCatchers
import zoo
import zoo
import mm_access

##################################################
## MODULE CONSTANTS
VFFSL=valueFromFrameOrSearchList
VFSL=valueFromSearchList
VFN=valueForName
currentTime=time.time
__CHEETAH_version__ = '2.4.4'
__CHEETAH_versionTuple__ = (2, 4, 4, 'development', 0)
__CHEETAH_genTime__ = 1401958408.412
__CHEETAH_genTimestamp__ = 'Thu Jun 05 10:53:28 2014'
__CHEETAH_src__ = 'f:\\GitHub\\mapmint\\mapmint-ui\\templates\\Skeleton.tmpl'
__CHEETAH_srcLastModified__ = 'Thu Jun 05 10:52:48 2014'
__CHEETAH_docstring__ = 'Autogenerated by Cheetah: The Python-Powered Template Engine'

if __CHEETAH_versionTuple__ < RequiredCheetahVersionTuple:
    raise AssertionError(
      'This template was compiled with Cheetah version'
      ' %s. Templates compiled before version %s must be recompiled.'%(
         __CHEETAH_version__, RequiredCheetahVersion))

##################################################
## CLASSES

class Skeleton(Template):

    ##################################################
    ## CHEETAH GENERATED METHODS


    def __init__(self, *args, **KWs):

        super(Skeleton, self).__init__(*args, **KWs)
        if not self._CHEETAH__instanceInitialized:
            cheetahKWArgs = {}
            allowedKWs = 'searchList namespaces filter filtersLib errorCatcher'.split()
            for k,v in KWs.items():
                if k in allowedKWs: cheetahKWArgs[k] = v
            self._initCheetahInstance(**cheetahKWArgs)
        

    def respond(self, trans=None):



        ## CHEETAH: main method generated for this template
        if (not trans and not self._CHEETAH__isBuffering and not callable(self.transaction)):
            trans = self.transaction # is None unless self.awake() was called
        if not trans:
            trans = DummyTransaction()
            _dummyTrans = True
        else: _dummyTrans = False
        write = trans.response().write
        SL = self._CHEETAH__searchList
        _filter = self._CHEETAH__currentFilter
        
        ########################################
        ## START - generated method body
        
        write(u'''<!DOCTYPE html> 
<html>
<head>
<meta http-equiv="Content-Type" content="text/html; charset=utf-8"/>
<meta name="viewport" content="width=device-width, initial-scale=1.0, maximum-scale=1.0, user-scalable=0">
<meta name="apple-mobile-web-app-capable" content="yes">
<meta name="description" content="''')
        _v = VFN(VFFSL(SL,"zoo",True),"_",False)("MapMint: Professional SDI manager") # u'$zoo._("MapMint: Professional SDI manager")' on line 13, col 35
        if _v is not None: write(_filter(_v, rawExpr=u'$zoo._("MapMint: Professional SDI manager")')) # from line 13, col 35.
        write(u'''">
<meta name="keywords" content="MapMint, SDI, Geospatial, Web GIS, GIS, WPS, WMS, WFS, WCS, ZOO-Project, ZOO, ZOO WPS, MapServer, GDAL, OSGeo, FOSS4G, OGC, OWS">
<meta name="copyright" content="''')
        _v = VFFSL(SL,"conf",True)["provider"]["providerName"] # u'$conf["provider"]["providerName"]' on line 15, col 33
        if _v is not None: write(_filter(_v, rawExpr=u'$conf["provider"]["providerName"]')) # from line 15, col 33.
        write(u'''">
<meta name="author" content="''')
        _v = VFFSL(SL,"conf",True)["provider"]["providerName"] # u'$conf["provider"]["providerName"]' on line 16, col 30
        if _v is not None: write(_filter(_v, rawExpr=u'$conf["provider"]["providerName"]')) # from line 16, col 30.
        write(u'''">
<link rel="shortcut icon" href="''')
        _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 17, col 33
        if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 17, col 33.
        write(u'''/favicon.ico" />
<link rel="alternate" type="application/rss+xml" title="MapMint RSS Feed" href="''')
        _v = VFFSL(SL,"conf",True)["main"]["applicationAddress"] # u'$(conf["main"]["applicationAddress"])' on line 18, col 81
        if _v is not None: write(_filter(_v, rawExpr=u'$(conf["main"]["applicationAddress"])')) # from line 18, col 81.
        write(u'''public/rss" />
<title>''')
        _v = VFFSL(SL,"page_title",True) # u'$page_title' on line 19, col 8
        if _v is not None: write(_filter(_v, rawExpr=u'$page_title')) # from line 19, col 8.
        write(u"""</title>
<link href='http://fonts.googleapis.com/css?family=Open+Sans:400,600,700,800' rel='stylesheet' type='text/css' />
""")
        for f in VFFSL(SL,"ocss",True): # generated from line 21, col 1
            write(u'''<link type="text/css" rel="stylesheet" href="''')
            if VFFSL(SL,"f",True)[0:7]=='http://': # generated from line 22, col 46
                _v = VFFSL(SL,"f",True) # u'$f' on line 22, col 69
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 22, col 69.
            else: # generated from line 22, col 71
                _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 22, col 77
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 22, col 77.
                write(u'''/css/''')
                _v = VFFSL(SL,"f",True) # u'$f' on line 22, col 108
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 22, col 108.
            write(u'''" />
''')
        write(u'''

''')
        for f in VFFSL(SL,"css",True): # generated from line 27, col 1
            write(u'''<link type="text/css" rel="stylesheet" ''')
            if (VFN(VFN(VFFSL(SL,"conf",True),"keys",False)(),"count",False)("senv")>0 and VFN(VFN(VFFSL(SL,"conf",True)["senv"],"keys",False)(),"count",False)("loggedin")>0 and VFFSL(SL,"conf",True)["senv"]["loggedin"]): # generated from line 28, col 40
                write(u'''media="screen" title="''')
                if VFN(VFFSL(SL,"conf",True)["mm"],"has_key",False)("adminTheme"): # generated from line 28, col 172
                    _v = VFFSL(SL,"conf",True)["mm"]["adminTheme"] # u'$conf["mm"]["adminTheme"]' on line 28, col 210
                    if _v is not None: write(_filter(_v, rawExpr=u'$conf["mm"]["adminTheme"]')) # from line 28, col 210.
                else: # generated from line 28, col 235
                    _v = VFFSL(SL,"f",True) # u'$f' on line 28, col 241
                    if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 28, col 241.
                write(u'''"''')
            write(u''' href="''')
            if VFFSL(SL,"f",True)[0:7]=='http://': # generated from line 28, col 267
                _v = VFFSL(SL,"f",True) # u'$f' on line 28, col 290
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 28, col 290.
            else: # generated from line 28, col 292
                _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 28, col 298
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 28, col 298.
                write(u'''/css/''')
                if VFN(VFFSL(SL,"conf",True)["mm"],"has_key",False)("adminTheme"): # generated from line 28, col 329
                    _v = VFFSL(SL,"conf",True)["mm"]["adminTheme"] # u'$conf["mm"]["adminTheme"]' on line 28, col 367
                    if _v is not None: write(_filter(_v, rawExpr=u'$conf["mm"]["adminTheme"]')) # from line 28, col 367.
                else: # generated from line 28, col 392
                    _v = VFFSL(SL,"f",True) # u'$f' on line 28, col 398
                    if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 28, col 398.
            write(u'''" id="''')
            if VFN(VFFSL(SL,"conf",True)["mm"],"has_key",False)("adminTheme"): # generated from line 28, col 422
                _v = VFFSL(SL,"conf",True)["mm"]["adminTheme"] # u'$conf["mm"]["adminTheme"]' on line 28, col 460
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["mm"]["adminTheme"]')) # from line 28, col 460.
            else: # generated from line 28, col 485
                _v = VFFSL(SL,"f",True) # u'$f' on line 28, col 491
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 28, col 491.
            write(u'''" />
''')
        write(u'''<link type="text/css" rel="stylesheet" href="''')
        _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 30, col 46
        if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 30, col 46.
        write(u'''/new-themes/themes/default/loader.css" /> 
<!--[if IE]>
        <link rel="stylesheet" type="text/css" href="''')
        _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 32, col 54
        if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 32, col 54.
        write(u'''/css/all-ie-only.css" />
<![endif]-->

''')
        if VFN(VFFSL(SL,"conf",True)["main"],"has_key",False)("jsCache") and VFFSL(SL,"conf",True)["main"]["jsCache"]=="prod": # generated from line 35, col 1
            if len(VFFSL(SL,"js",True))>0 and VFFSL(SL,"js",True)[len(VFFSL(SL,"js",True))-1]=="ckeditor.js": # generated from line 36, col 1
                finalJS = VFFSL(SL,"js",True)[len(VFFSL(SL,"js",True))-1]
            else: # generated from line 38, col 1
                finalJS = ""
            ljs = ['flexigrid.js']+VFFSL(SL,"js",True)+['MLayout.js']
            write(u'''<script type="text/javascript" src="''')
            _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 42, col 37
            if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 42, col 37.
            write(u'''/js/''')
            for f in ["modernizr.custom","jquery-2.0.3.min","jquery-ui-1.10.3",'jquery.notifyBar','jquery.easyui.min','jquery.layout-latest']: # generated from line 42, col 67
                _v = VFFSL(SL,"f",True) # u'${f}' on line 42, col 199
                if _v is not None: write(_filter(_v, rawExpr=u'${f}')) # from line 42, col 199.
                write(u'''.js,''')
            write(u'''"></script>

''')
            if len(VFFSL(SL,"ljs",True))>0: # generated from line 44, col 1
                write(u'''<script type="text/javascript" src="''')
                _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 45, col 37
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 45, col 37.
                write(u'''/js/''')
                for f in VFFSL(SL,"ljs",True): # generated from line 45, col 67
                    if VFFSL(SL,"finalJS",True)!=VFFSL(SL,"f",True): # generated from line 45, col 83
                        _v = VFFSL(SL,"f",True) # u'$f' on line 45, col 100
                        if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 45, col 100.
                        write(u''',''')
                write(u'''"></script>
''')
                if VFFSL(SL,"finalJS",True)!="": # generated from line 46, col 1
                    write(u'''<script src="''')
                    _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 47, col 14
                    if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 47, col 14.
                    write(u'''/js/''')
                    _v = VFFSL(SL,"finalJS",True) # u'$finalJS' on line 47, col 44
                    if _v is not None: write(_filter(_v, rawExpr=u'$finalJS')) # from line 47, col 44.
                    write(u'''"></script>
''')
            write(u'''

''')
            for f in VFFSL(SL,"js1",True): # generated from line 52, col 1
                write(u'''<script type="text/javascript" src="''')
                _v = VFFSL(SL,"conf",True)['main']['serverAddress'] # u"$conf['main']['serverAddress']" on line 53, col 37
                if _v is not None: write(_filter(_v, rawExpr=u"$conf['main']['serverAddress']")) # from line 53, col 37.
                write(u'''?request=Execute&service=WPS&version=1.0.0&Identifier=template.display&DataInputs=tmpl=''')
                _v = VFFSL(SL,"f",True) # u'$f' on line 53, col 154
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 53, col 154.
                write(u''';module=''')
                _v = VFFSL(SL,"mmodule",True) # u'$mmodule' on line 53, col 164
                if _v is not None: write(_filter(_v, rawExpr=u'$mmodule')) # from line 53, col 164.
                write(u'''&RawDataOutput=Result@mimeType=text/plain"></script>
''')
            write(u'''

''')
            for f in VFFSL(SL,"js2",True): # generated from line 58, col 1
                write(u'''<script type="text/javascript" src="''')
                _v = VFFSL(SL,"f",True) # u'$f' on line 59, col 37
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 59, col 37.
                write(u'''"></script>
''')
            write(u'''

''')
            if len(VFFSL(SL,"js3",True))>0: # generated from line 63, col 1
                for f in VFFSL(SL,"js3",True): # generated from line 64, col 1
                    write(u'''<script type="text/javascript" src="''')
                    _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # u'$conf["main"]["publicationUrl"]' on line 65, col 37
                    if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["publicationUrl"]')) # from line 65, col 37.
                    write(u'''/''')
                    _v = VFFSL(SL,"f",True) # u'$f' on line 65, col 69
                    if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 65, col 69.
                    write(u'''"></script>
''')
            write(u'''
''')
        else: # generated from line 69, col 1
            for f in ["jquery-2.0.3.min","jquery-ui-1.10.3",'jquery.notifyBar','jquery.easyui.min','jquery.layout-latest']: # generated from line 70, col 1
                write(u'''<script type="text/javascript" src="''')
                _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 71, col 37
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 71, col 37.
                write(u'''/js/''')
                _v = VFFSL(SL,"f",True) # u'${f}' on line 71, col 67
                if _v is not None: write(_filter(_v, rawExpr=u'${f}')) # from line 71, col 67.
                write(u'''.js"></script>
''')
            write(u'''
''')
            ljs = ['flexigrid.js']+VFFSL(SL,"js",True)+['MLayout.js']
            for f in VFFSL(SL,"ljs",True): # generated from line 75, col 1
                write(u'''<script type="text/javascript" src="''')
                _v = VFFSL(SL,"conf",True)["main"]["mmAddress"] # u'$conf["main"]["mmAddress"]' on line 76, col 37
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["mmAddress"]')) # from line 76, col 37.
                write(u'''/js/''')
                _v = VFFSL(SL,"f",True) # u'$f' on line 76, col 67
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 76, col 67.
                write(u'''"></script>
''')
            write(u'''
''')
            for f in VFFSL(SL,"js1",True): # generated from line 79, col 1
                write(u'''<script type="text/javascript" src="''')
                _v = VFFSL(SL,"conf",True)['main']['serverAddress'] # u"$conf['main']['serverAddress']" on line 80, col 37
                if _v is not None: write(_filter(_v, rawExpr=u"$conf['main']['serverAddress']")) # from line 80, col 37.
                write(u'''?request=Execute&service=WPS&version=1.0.0&Identifier=template.display&DataInputs=tmpl=''')
                _v = VFFSL(SL,"f",True) # u'$f' on line 80, col 154
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 80, col 154.
                write(u''';module=''')
                _v = VFFSL(SL,"mmodule",True) # u'$mmodule' on line 80, col 164
                if _v is not None: write(_filter(_v, rawExpr=u'$mmodule')) # from line 80, col 164.
                write(u'''&RawDataOutput=Result@mimeType=text/plain"></script>
''')
            write(u'''

''')
            for f in VFFSL(SL,"js2",True): # generated from line 85, col 1
                write(u'''<script type="text/javascript" src="''')
                _v = VFFSL(SL,"f",True) # u'$f' on line 86, col 37
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 86, col 37.
                write(u'''"></script>
''')
            write(u'''
''')
            for f in VFFSL(SL,"js3",True): # generated from line 89, col 1
                write(u'''<script type="text/javascript" src="''')
                _v = VFFSL(SL,"conf",True)["main"]["publicationUrl"] # u'$conf["main"]["publicationUrl"]' on line 90, col 37
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["main"]["publicationUrl"]')) # from line 90, col 37.
                write(u'''/''')
                _v = VFFSL(SL,"f",True) # u'$f' on line 90, col 69
                if _v is not None: write(_filter(_v, rawExpr=u'$f')) # from line 90, col 69.
                write(u'''"></script>
''')
            write(u'''
''')
        write(u'''
</head>
<body>

''')
        try: # generated from line 98, col 1
            verr = VFFSL(SL,"errorMsg",True)
        except: # generated from line 100, col 1
            verr = None
        if VFFSL(SL,"mmodule",True)!="public": # generated from line 103, col 1
            write(u'''<div class="loader-container"> 
<div id="loader"> 
</div> 
</div> 

''')
            if (VFN(VFN(VFFSL(SL,"conf",True),"keys",False)(),"count",False)("senv")>0 and VFN(VFN(VFFSL(SL,"conf",True)["senv"],"keys",False)(),"count",False)("loggedin")>0 and VFN(VFN(VFFSL(SL,"conf",True)["senv"],"keys",False)(),"count",False)("lastname")>0 and VFFSL(SL,"conf",True)["senv"]["loggedin"]!="false") and not(VFFSL(SL,"verr",True)): # generated from line 109, col 1
                write(u'''<div class="ui-layout-north">

<h1 class="ttitle"><span class="logo"></span>Map<span class="mint">Mint</span></h1>

<ul id="nav">

''')
                if VFFSL(SL,"conf",True)["mm"]["indexes"]=="true": # generated from line 116, col 1
                    menu = ['Dashboard','Distiller','Territories','Indexes','Themes','Documents','Manager','Publisher']
                else: # generated from line 118, col 1
                    if VFFSL(SL,"conf",True)["mm"]["documents"]=="true": # generated from line 119, col 1
                        menu = ['Dashboard','Distiller','Manager','Themes','Documents','Publisher']
                    else: # generated from line 121, col 1
                        menu = ['Dashboard','Distiller','Manager','Themes','Publisher']
                write(u'''
''')
                for a in VFFSL(SL,"menu",True): # generated from line 126, col 1
                    write(u'''    <li class="current">
''')
                    if VFFSL(SL,"inputs",True)['tmpl']['value']==VFFSL(SL,"a",True): # generated from line 128, col 1
                        write(u'''      <a href="''')
                        _v = VFFSL(SL,"a",True) # u'$a' on line 129, col 16
                        if _v is not None: write(_filter(_v, rawExpr=u'$a')) # from line 129, col 16.
                        write(u'''" id="''')
                        _v = VFFSL(SL,"a",True) # u'${a}' on line 129, col 24
                        if _v is not None: write(_filter(_v, rawExpr=u'${a}')) # from line 129, col 24.
                        write(u'''_button" class="ui-state-active">
''')
                    else: # generated from line 130, col 1
                        write(u'''      <a href="''')
                        _v = VFFSL(SL,"a",True) # u'$a' on line 131, col 16
                        if _v is not None: write(_filter(_v, rawExpr=u'$a')) # from line 131, col 16.
                        write(u'''" id="''')
                        _v = VFFSL(SL,"a",True) # u'${a}' on line 131, col 24
                        if _v is not None: write(_filter(_v, rawExpr=u'${a}')) # from line 131, col 24.
                        write(u'''_button">
''')
                    write(u'''    ''')
                    _v = VFN(VFFSL(SL,"zoo",True),"_",False)(VFFSL(SL,"a",True)) # u'$zoo._($a)' on line 133, col 5
                    if _v is not None: write(_filter(_v, rawExpr=u'$zoo._($a)')) # from line 133, col 5.
                    write(u'''</a>
    </li>
''')
                write(u'''
  </ul>

</div>

<div class="admin">
    <h2 class="ad">''')
                _v = VFFSL(SL,"conf",True)["senv"]["firstname"] # u'$conf["senv"]["firstname"]' on line 142, col 20
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["senv"]["firstname"]')) # from line 142, col 20.
                write(u''' ''')
                _v = VFFSL(SL,"conf",True)["senv"]["lastname"] # u'$conf["senv"]["lastname"]' on line 142, col 47
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["senv"]["lastname"]')) # from line 142, col 47.
                write(u'''</h2>
<ul class="sets">
                <li class="sett"><a href="#" id="users_admin" title="" onclick="System.UserPreferences()">''')
                _v = VFN(VFFSL(SL,"zoo",True),"_",False)("Preferences") # u'$zoo._("Preferences")' on line 144, col 107
                if _v is not None: write(_filter(_v, rawExpr=u'$zoo._("Preferences")')) # from line 144, col 107.
                write(u'''</a></li>
''')
                groups = mm_access.getGroup(VFFSL(SL,"conf",True))
                if VFN(VFFSL(SL,"groups",True),"count",False)("admin")>0: # generated from line 147, col 1
                    write(u'''                <li class="user"><a href="#" id="user_management" title="" onclick="System.UserManagement()">''')
                    _v = VFN(VFFSL(SL,"zoo",True),"_",False)("Users management") # u'$zoo._("Users management")' on line 148, col 110
                    if _v is not None: write(_filter(_v, rawExpr=u'$zoo._("Users management")')) # from line 148, col 110.
                    write(u'''</a></li>
''')
                write(u'''                <li class="logt"><a href="#" id="logout" title="">''')
                _v = VFN(VFFSL(SL,"zoo",True),"_",False)("Log out") # u'$zoo._("Log out")' on line 150, col 67
                if _v is not None: write(_filter(_v, rawExpr=u'$zoo._("Log out")')) # from line 150, col 67.
                write(u'''</a></li>
        </ul>
        
</div>

''')
        write(u'''
''')
        _v = VFFSL(SL,"body",True) # u'$body' on line 158, col 1
        if _v is not None: write(_filter(_v, rawExpr=u'$body')) # from line 158, col 1.
        write(u'''

''')
        if VFFSL(SL,"mmodule",True)!="public" and (VFN(VFN(VFFSL(SL,"conf",True),"keys",False)(),"count",False)("senv")>0 and VFFSL(SL,"conf",True)["senv"]["loggedin"]!="false" and VFN(VFN(VFFSL(SL,"conf",True)["senv"],"keys",False)(),"count",False)("firstname")>0) and not(VFFSL(SL,"verr",True)): # generated from line 160, col 1
            write(u'''<div class="ui-layout-south"> 
  <p class="credits">&copy; copyright <a href="''')
            _v = VFFSL(SL,"conf",True)["provider"]["providerSite"] # u'$conf["provider"]["providerSite"]' on line 162, col 48
            if _v is not None: write(_filter(_v, rawExpr=u'$conf["provider"]["providerSite"]')) # from line 162, col 48.
            write(u'''">''')
            _v = VFFSL(SL,"conf",True)["provider"]["providerName"] # u'$conf["provider"]["providerName"]' on line 162, col 83
            if _v is not None: write(_filter(_v, rawExpr=u'$conf["provider"]["providerName"]')) # from line 162, col 83.
            write(u'''</a></p>
<!--<div class="progress_box_call"></div>-->\t
<div id="progress_bar" class="ui-progress-bar ui-container">
<div class="ui-progress" style="width: 79%;">
  <span class="ui-label" style="display:none;"><b class="value">79%</b></span>
</div>
</div>
''')
        else: # generated from line 169, col 1
            if VFN(VFN(VFFSL(SL,"conf",True)["mm"],"keys",False)(),"count",False)("nofooter")==0 or (VFFSL(SL,"conf",True)["mm"]["nofooter"]!="true" and VFN(VFN(VFFSL(SL,"conf",True)["mm"],"keys",False)(),"count",False)("nofooter")>0): # generated from line 170, col 1
                write(u'''<ul class="credits">
<li>&copy; copyright <a href="''')
                _v = VFFSL(SL,"conf",True)["provider"]["providerSite"] # u'$conf["provider"]["providerSite"]' on line 172, col 31
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["provider"]["providerSite"]')) # from line 172, col 31.
                write(u'''">''')
                _v = VFFSL(SL,"conf",True)["provider"]["providerName"] # u'$conf["provider"]["providerName"]' on line 172, col 66
                if _v is not None: write(_filter(_v, rawExpr=u'$conf["provider"]["providerName"]')) # from line 172, col 66.
                write(u'''</a></li>|&#160;&#160;<li><a href="http://www.mapmint.com">''')
                _v = VFN(VFFSL(SL,"zoo",True),"_",False)("Terms of use") # u'$zoo._("Terms of use")' on line 172, col 158
                if _v is not None: write(_filter(_v, rawExpr=u'$zoo._("Terms of use")')) # from line 172, col 158.
                write(u'''</a></li>
</ul>
''')
        write(u'''
</div>
</body>
</html>
''')
        
        ########################################
        ## END - generated method body
        
        return _dummyTrans and trans.response().getvalue() or ""
        
    ##################################################
    ## CHEETAH GENERATED ATTRIBUTES


    _CHEETAH__instanceInitialized = False

    _CHEETAH_version = __CHEETAH_version__

    _CHEETAH_versionTuple = __CHEETAH_versionTuple__

    _CHEETAH_genTime = __CHEETAH_genTime__

    _CHEETAH_genTimestamp = __CHEETAH_genTimestamp__

    _CHEETAH_src = __CHEETAH_src__

    _CHEETAH_srcLastModified = __CHEETAH_srcLastModified__

    js1 = ["main_js"] 

    js3 = [] 

    mmodule = "Distiller"

    css = ["green"]

    js2 =[]

    js2 =[]

    _mainCheetahMethod_for_Skeleton= 'respond'

## END CLASS DEFINITION

if not hasattr(Skeleton, '_initCheetahAttributes'):
    templateAPIClass = getattr(Skeleton, '_CHEETAH_templateClass', Template)
    templateAPIClass._addCheetahPlumbingCodeToClass(Skeleton)


# CHEETAH was developed by Tavis Rudd and Mike Orr
# with code, advice and input from many other volunteers.
# For more information visit http://www.CheetahTemplate.org/

##################################################
## if run from command line:
if __name__ == '__main__':
    from Cheetah.TemplateCmdLineIface import CmdLineIface
    CmdLineIface(templateObj=Skeleton()).run()


